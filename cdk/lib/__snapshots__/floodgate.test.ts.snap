// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Floodgate stack matches the snapshot 1`] = `
{
  "Metadata": {
    "gu:cdk:constructs": [
      "GuParameter",
      "GuParameter",
      "GuPolicy",
      "GuEc2App",
      "GuCertificate",
      "GuInstanceRole",
      "GuSsmSshPolicy",
      "GuDescribeEC2Policy",
      "GuLoggingStreamNameParameter",
      "GuLogShippingPolicy",
      "GuDistributionBucketParameter",
      "GuGetDistributablePolicy",
      "GuParameterStoreReadPolicy",
      "GuAmiParameter",
      "GuHttpsEgressSecurityGroup",
      "GuWazuhAccess",
      "GuAutoScalingGroup",
      "GuApplicationLoadBalancer",
      "GuApplicationTargetGroup",
      "GuHttpsApplicationListener",
      "GuAlb5xxPercentageAlarm",
      "GuUnhealthyInstancesAlarm",
      "GuSecurityGroup",
    ],
    "gu:cdk:version": "TEST",
  },
  "Outputs": {
    "LoadBalancerContentapifloodgateDnsName": {
      "Description": "DNS entry for LoadBalancerContentapifloodgate",
      "Value": {
        "Fn::GetAtt": [
          "LoadBalancerContentapifloodgate340F3FB8",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": {
    "AMIContentapifloodgate": {
      "Description": "Amazon Machine Image ID for the app content-api-floodgate. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "DistributionBucketName": {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "LoggingStreamName": {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "PromRemoteWrite": {
      "Default": "/account/content-api-common/metrics/prometheus_remote_write_url",
      "Description": "SSM path pointing to the parameter which gives an Amazon Managed Prometheus endpoint to push metrics to",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueaccountservicescapigutoolsTESThostedzoneidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/account/services/capi.gutools/TEST/hostedzoneid",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueaccountvpcTESTgenericidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/account/vpc/TEST-generic/id",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "subnets": {
      "Default": "/account/vpc/TEST-generic/subnets",
      "Description": "Subnets to deploy into",
      "Type": "AWS::SSM::Parameter::Value<List<String>>",
    },
  },
  "Resources": {
    "AutoScalingGroupContentapifloodgateASG6CE00146": {
      "Properties": {
        "HealthCheckGracePeriod": 120,
        "HealthCheckType": "ELB",
        "LaunchTemplate": {
          "LaunchTemplateId": {
            "Ref": "contentapifloodgateTESTcontentapifloodgateE40DDE74",
          },
          "Version": {
            "Fn::GetAtt": [
              "contentapifloodgateTESTcontentapifloodgateE40DDE74",
              "LatestVersionNumber",
            ],
          },
        },
        "MaxSize": "2",
        "MinSize": "1",
        "Tags": [
          {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "content-api-floodgate",
          },
          {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/floodgate",
          },
          {
            "Key": "LogKinesisStreamName",
            "PropagateAtLaunch": true,
            "Value": {
              "Ref": "LoggingStreamName",
            },
          },
          {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "content-api-floodgate",
          },
          {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          {
            "Key": "SystemdUnit",
            "PropagateAtLaunch": true,
            "Value": "content-api-floodgate.service",
          },
        ],
        "TargetGroupARNs": [
          {
            "Ref": "TargetGroupContentapifloodgateD7BCA3D5",
          },
        ],
        "VPCZoneIdentifier": {
          "Ref": "subnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "CertificateContentapifloodgate4F5519F6": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "DomainName": "floodgate.capi.gutools.co.uk",
        "DomainValidationOptions": [
          {
            "DomainName": "floodgate.capi.gutools.co.uk",
            "HostedZoneId": {
              "Ref": "SsmParameterValueaccountservicescapigutoolsTESThostedzoneidC96584B6F00A464EAD1953AFF4B05118Parameter",
            },
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "content-api-floodgate",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/floodgate",
          },
          {
            "Key": "Name",
            "Value": "Floodgate/CertificateContentapifloodgate",
          },
          {
            "Key": "Stack",
            "Value": "content-api-floodgate",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
      "UpdateReplacePolicy": "Retain",
    },
    "ContentSourceF49C0C0D": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S",
          },
          {
            "AttributeName": "environment",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "environment",
            "KeyType": "RANGE",
          },
        ],
        "SSESpecification": {
          "SSEEnabled": true,
        },
        "TableName": "floodgate-content-source-TEST",
        "Tags": [
          {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/floodgate",
          },
          {
            "Key": "Stack",
            "Value": "content-api-floodgate",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "DescribeEC2PolicyFF5F9295": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleContentapifloodgate4A6AA3CB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FloodgatePolicyBB34B612": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::content-api-config/*",
            },
            {
              "Action": "dynamodb:*",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "JobHistory01AD0917",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "ContentSourceF49C0C0D",
                    "Arn",
                  ],
                },
                {
                  "Fn::GetAtt": [
                    "RunningJob4D26EAC6",
                    "Arn",
                  ],
                },
              ],
            },
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeTags",
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "aps:RemoteWrite",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FloodgatePolicyBB34B612",
        "Roles": [
          {
            "Ref": "InstanceRoleContentapifloodgate4A6AA3CB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetDistributablePolicyContentapifloodgateDF61A68E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "DistributionBucketName",
                    },
                    "/content-api-floodgate/TEST/content-api-floodgate/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicyContentapifloodgateDF61A68E",
        "Roles": [
          {
            "Ref": "InstanceRoleContentapifloodgate4A6AA3CB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuHttpsEgressSecurityGroupContentapifloodgateE68A17B8": {
      "Properties": {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "content-api-floodgate",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/floodgate",
          },
          {
            "Key": "Stack",
            "Value": "content-api-floodgate",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueaccountvpcTESTgenericidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuHttpsEgressSecurityGroupContentapifloodgatefromFloodgateLoadBalancerContentapifloodgateSecurityGroup7ECF569F9000A46CE07E": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupContentapifloodgateE68A17B8",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LoadBalancerContentapifloodgateSecurityGroup6BAE37E7",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuLogShippingPolicy981BFE5A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:kinesis:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuLogShippingPolicy981BFE5A",
        "Roles": [
          {
            "Ref": "InstanceRoleContentapifloodgate4A6AA3CB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "High5xxPercentageAlarmContentapifloodgate8B57A90E": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":floogate-monitoring-TEST",
              ],
            ],
          },
        ],
        "AlarmDescription": "content-api-floodgate exceeded 0% error rate",
        "AlarmName": "High 5XX error percentage from content-api-floodgate in TEST",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 2,
        "Metrics": [
          {
            "Expression": "100*(m1+m2)/m3",
            "Id": "expr_1",
            "Label": "% of 5XX responses served for content-api-floodgate (load balancer and instances combined)",
          },
          {
            "Id": "m1",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "LoadBalancer",
                    "Value": {
                      "Fn::GetAtt": [
                        "LoadBalancerContentapifloodgate340F3FB8",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "HTTPCode_ELB_5XX_Count",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          {
            "Id": "m2",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "LoadBalancer",
                    "Value": {
                      "Fn::GetAtt": [
                        "LoadBalancerContentapifloodgate340F3FB8",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "HTTPCode_Target_5XX_Count",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
          {
            "Id": "m3",
            "MetricStat": {
              "Metric": {
                "Dimensions": [
                  {
                    "Name": "LoadBalancer",
                    "Value": {
                      "Fn::GetAtt": [
                        "LoadBalancerContentapifloodgate340F3FB8",
                        "LoadBalancerFullName",
                      ],
                    },
                  },
                ],
                "MetricName": "RequestCount",
                "Namespace": "AWS/ApplicationELB",
              },
              "Period": 60,
              "Stat": "Sum",
            },
            "ReturnData": false,
          },
        ],
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "InstanceOutboundSGContentapifloodgate22B30938": {
      "Properties": {
        "GroupDescription": "Floodgate/InstanceOutboundSGContentapifloodgate",
        "SecurityGroupEgress": [
          {
            "CidrIp": "10.248.0.0/16",
            "Description": "Outgoing to port 8080 on internal infrastructure",
            "FromPort": 8080,
            "IpProtocol": "tcp",
            "ToPort": 8080,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "content-api-floodgate",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/floodgate",
          },
          {
            "Key": "Stack",
            "Value": "content-api-floodgate",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueaccountvpcTESTgenericidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "InstanceOutboundSGContentapifloodgatefromFloodgateLoadBalancerContentapifloodgateSecurityGroup7ECF569F9000BB550398": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "InstanceOutboundSGContentapifloodgate22B30938",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LoadBalancerContentapifloodgateSecurityGroup6BAE37E7",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "InstanceRoleContentapifloodgate4A6AA3CB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Tags": [
          {
            "Key": "App",
            "Value": "content-api-floodgate",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/floodgate",
          },
          {
            "Key": "Stack",
            "Value": "content-api-floodgate",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "JobHistory01AD0917": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "contentSourceId",
            "AttributeType": "S",
          },
          {
            "AttributeName": "startTime",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "contentSourceId",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "startTime",
            "KeyType": "RANGE",
          },
        ],
        "SSESpecification": {
          "SSEEnabled": true,
        },
        "TableName": "floodgate-job-history-TEST",
        "Tags": [
          {
            "Key": "devx-backup-enabled",
            "Value": "true",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/floodgate",
          },
          {
            "Key": "Stack",
            "Value": "content-api-floodgate",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "ListenerContentapifloodgate6128E3C3": {
      "Properties": {
        "Certificates": [
          {
            "CertificateArn": {
              "Ref": "CertificateContentapifloodgate4F5519F6",
            },
          },
        ],
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "TargetGroupContentapifloodgateD7BCA3D5",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": {
          "Ref": "LoadBalancerContentapifloodgate340F3FB8",
        },
        "Port": 443,
        "Protocol": "HTTPS",
        "SslPolicy": "ELBSecurityPolicy-TLS13-1-2-2021-06",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerContentapifloodgate340F3FB8": {
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
          {
            "Key": "routing.http.x_amzn_tls_version_and_cipher_suite.enabled",
            "Value": "true",
          },
          {
            "Key": "routing.http.drop_invalid_header_fields.enabled",
            "Value": "true",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "LoadBalancerContentapifloodgateSecurityGroup6BAE37E7",
              "GroupId",
            ],
          },
        ],
        "Subnets": {
          "Ref": "subnets",
        },
        "Tags": [
          {
            "Key": "App",
            "Value": "content-api-floodgate",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/floodgate",
          },
          {
            "Key": "Stack",
            "Value": "content-api-floodgate",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LoadBalancerContentapifloodgateSecurityGroup6BAE37E7": {
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB FloodgateLoadBalancerContentapifloodgate81852B8B",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": [
          {
            "Key": "App",
            "Value": "content-api-floodgate",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/floodgate",
          },
          {
            "Key": "Stack",
            "Value": "content-api-floodgate",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueaccountvpcTESTgenericidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LoadBalancerContentapifloodgateSecurityGrouptoFloodgateGuHttpsEgressSecurityGroupContentapifloodgateFC06BEAD900074DA25D8": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "GuHttpsEgressSecurityGroupContentapifloodgateE68A17B8",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "LoadBalancerContentapifloodgateSecurityGroup6BAE37E7",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "LoadBalancerContentapifloodgateSecurityGrouptoFloodgateInstanceOutboundSGContentapifloodgateB8BCBDD99000E2A61DFA": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "InstanceOutboundSGContentapifloodgate22B30938",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "LoadBalancerContentapifloodgateSecurityGroup6BAE37E7",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "LoadBalancerContentapifloodgateSecurityGrouptoFloodgateWazuhSecurityGroup84485DA69000F50A12F9": {
      "Properties": {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "WazuhSecurityGroup",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "LoadBalancerContentapifloodgateSecurityGroup6BAE37E7",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ParameterStoreReadContentapifloodgate1428C357": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api-floodgate/content-api-floodgate",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/TEST/content-api-floodgate/content-api-floodgate/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleContentapifloodgate4A6AA3CB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RunningJob4D26EAC6": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "contentSourceId",
            "AttributeType": "S",
          },
          {
            "AttributeName": "contentSourceEnvironment",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "contentSourceId",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "contentSourceEnvironment",
            "KeyType": "RANGE",
          },
        ],
        "SSESpecification": {
          "SSEEnabled": true,
        },
        "TableName": "floodgate-running-job-TEST",
        "Tags": [
          {
            "Key": "devx-backup-enabled",
            "Value": "false",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/floodgate",
          },
          {
            "Key": "Stack",
            "Value": "content-api-floodgate",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "SsmSshPolicy4CFC977E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2messages:AcknowledgeMessage",
                "ec2messages:DeleteMessage",
                "ec2messages:FailMessage",
                "ec2messages:GetEndpoint",
                "ec2messages:GetMessages",
                "ec2messages:SendReply",
                "ssm:UpdateInstanceInformation",
                "ssm:ListInstanceAssociations",
                "ssm:DescribeInstanceProperties",
                "ssm:DescribeDocumentParameters",
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ssm-ssh-policy",
        "Roles": [
          {
            "Ref": "InstanceRoleContentapifloodgate4A6AA3CB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TargetGroupContentapifloodgateD7BCA3D5": {
      "Properties": {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Port": 9000,
        "Protocol": "HTTP",
        "Tags": [
          {
            "Key": "App",
            "Value": "content-api-floodgate",
          },
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/floodgate",
          },
          {
            "Key": "Stack",
            "Value": "content-api-floodgate",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "SsmParameterValueaccountvpcTESTgenericidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "UnhealthyInstancesAlarmContentapifloodgateF84E1A07": {
      "Properties": {
        "ActionsEnabled": true,
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:aws:sns:",
                {
                  "Ref": "AWS::Region",
                },
                ":",
                {
                  "Ref": "AWS::AccountId",
                },
                ":floogate-monitoring-TEST",
              ],
            ],
          },
        ],
        "AlarmDescription": "content-api-floodgate's instances have failed healthchecks several times over the last 1 hour.
      This typically results in the AutoScaling Group cycling instances and can lead to problems with deployment,
      scaling or handling traffic spikes.

      Check content-api-floodgate's application logs or ssh onto an unhealthy instance in order to debug these problems.",
        "AlarmName": "Unhealthy instances for content-api-floodgate in TEST",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 30,
        "Dimensions": [
          {
            "Name": "LoadBalancer",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "ListenerContentapifloodgate6128E3C3",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "ListenerContentapifloodgate6128E3C3",
                          },
                        ],
                      },
                    ],
                  },
                  "/",
                  {
                    "Fn::Select": [
                      3,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "ListenerContentapifloodgate6128E3C3",
                          },
                        ],
                      },
                    ],
                  },
                ],
              ],
            },
          },
          {
            "Name": "TargetGroup",
            "Value": {
              "Fn::GetAtt": [
                "TargetGroupContentapifloodgateD7BCA3D5",
                "TargetGroupFullName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 60,
        "MetricName": "UnHealthyHostCount",
        "Namespace": "AWS/ApplicationELB",
        "Period": 60,
        "Statistic": "Maximum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "WazuhSecurityGroup": {
      "Properties": {
        "GroupDescription": "Allow outbound traffic from wazuh agent to manager",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh event logging",
            "FromPort": 1514,
            "IpProtocol": "tcp",
            "ToPort": 1514,
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh agent registration",
            "FromPort": 1515,
            "IpProtocol": "tcp",
            "ToPort": 1515,
          },
        ],
        "Tags": [
          {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          {
            "Key": "gu:repo",
            "Value": "guardian/floodgate",
          },
          {
            "Key": "Stack",
            "Value": "content-api-floodgate",
          },
          {
            "Key": "Stage",
            "Value": "TEST",
          },
        ],
        "VpcId": {
          "Ref": "SsmParameterValueaccountvpcTESTgenericidC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "WazuhSecurityGroupfromFloodgateLoadBalancerContentapifloodgateSecurityGroup7ECF569F90004B69AEE7": {
      "Properties": {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": {
          "Fn::GetAtt": [
            "WazuhSecurityGroup",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LoadBalancerContentapifloodgateSecurityGroup6BAE37E7",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "contentapifloodgateTESTcontentapifloodgateE40DDE74": {
      "DependsOn": [
        "InstanceRoleContentapifloodgate4A6AA3CB",
      ],
      "Properties": {
        "LaunchTemplateData": {
          "IamInstanceProfile": {
            "Arn": {
              "Fn::GetAtt": [
                "contentapifloodgateTESTcontentapifloodgateProfile9D3403A2",
                "Arn",
              ],
            },
          },
          "ImageId": {
            "Ref": "AMIContentapifloodgate",
          },
          "InstanceType": "t4g.small",
          "MetadataOptions": {
            "HttpTokens": "required",
          },
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "GuHttpsEgressSecurityGroupContentapifloodgateE68A17B8",
                "GroupId",
              ],
            },
            {
              "Fn::GetAtt": [
                "WazuhSecurityGroup",
                "GroupId",
              ],
            },
            {
              "Fn::GetAtt": [
                "InstanceOutboundSGContentapifloodgate22B30938",
                "GroupId",
              ],
            },
          ],
          "TagSpecifications": [
            {
              "ResourceType": "instance",
              "Tags": [
                {
                  "Key": "App",
                  "Value": "content-api-floodgate",
                },
                {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                {
                  "Key": "gu:repo",
                  "Value": "guardian/floodgate",
                },
                {
                  "Key": "Name",
                  "Value": "Floodgate/content-api-floodgate-TEST-content-api-floodgate",
                },
                {
                  "Key": "Stack",
                  "Value": "content-api-floodgate",
                },
                {
                  "Key": "Stage",
                  "Value": "TEST",
                },
              ],
            },
            {
              "ResourceType": "volume",
              "Tags": [
                {
                  "Key": "App",
                  "Value": "content-api-floodgate",
                },
                {
                  "Key": "gu:cdk:version",
                  "Value": "TEST",
                },
                {
                  "Key": "gu:repo",
                  "Value": "guardian/floodgate",
                },
                {
                  "Key": "Name",
                  "Value": "Floodgate/content-api-floodgate-TEST-content-api-floodgate",
                },
                {
                  "Key": "Stack",
                  "Value": "content-api-floodgate",
                },
                {
                  "Key": "Stage",
                  "Value": "TEST",
                },
              ],
            },
          ],
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "",
                [
                  "#!/bin/bash -ev

adduser --disabled-password content-api

aws configure set region ",
                  {
                    "Ref": "AWS::Region",
                  },
                  "

cd /home/content-api

mkdir -p /etc/gu
mkdir logs

echo 'STAGE=TEST' > /etc/gu/install_vars
aws s3 cp s3://content-api-config/content-api-floodgate/TEST/floodgate.conf /etc/gu/floodgate.conf
aws s3 cp s3://content-api-dist/content-api-floodgate/TEST/content-api-floodgate/content-api-floodgate_1.0_all.deb .

dpkg -i content-api-floodgate_1.0_all.deb

echo JAVA_OPTS=\\"-Dpidfile.path=/var/run/content-api-floodgate/floodgate.pid -Dconfig.file=/etc/gu/floodgate.conf\\" >> /etc/default/content-api-floodgate

chown -R content-api /home/content-api /etc/gu
chgrp -R content-api /home/content-api /etc/gu

systemctl start content-api-floodgate

ln -s /usr/share/content-api-floodgate floodgate

export HOSTNAME=$(hostname)
cat > /etc/gu/otel.yaml << EOF
extensions:
  sigv4auth:
    service: "aps"  #APS refers to "Amazon Prometheus Service" aka Amazon Managed Prometheus aka AMP
    region: "",
                  {
                    "Ref": "AWS::Region",
                  },
                  ""

receivers:
  prometheus:
    config:
      scrape_configs:
        - job_name: 'floodgate'
          scrape_interval: 120s
          static_configs:
            # metrics endpoint for your app
            - targets: [ '0.0.0.0:9000' ]
              labels:
                instance: \${HOSTNAME}
                stack: content-api-floodgate
                stage: TEST
processors:
  batch/metrics:
    timeout: 120s

exporters:
  prometheusremotewrite:
    endpoint: "",
                  {
                    "Ref": "PromRemoteWrite",
                  },
                  ""
    auth:
      authenticator: sigv4auth

service:
  extensions: [sigv4auth]
  pipelines:
    metrics:
      receivers: [prometheus]
      processors: [batch/metrics]
      exporters: [prometheusremotewrite]
EOF
/opt/aws/aws-otel-collector/bin/aws-otel-collector-ctl -c /etc/gu/otel.yaml -a start",
                ],
              ],
            },
          },
        },
        "TagSpecifications": [
          {
            "ResourceType": "launch-template",
            "Tags": [
              {
                "Key": "App",
                "Value": "content-api-floodgate",
              },
              {
                "Key": "gu:cdk:version",
                "Value": "TEST",
              },
              {
                "Key": "gu:repo",
                "Value": "guardian/floodgate",
              },
              {
                "Key": "Name",
                "Value": "Floodgate/content-api-floodgate-TEST-content-api-floodgate",
              },
              {
                "Key": "Stack",
                "Value": "content-api-floodgate",
              },
              {
                "Key": "Stage",
                "Value": "TEST",
              },
            ],
          },
        ],
      },
      "Type": "AWS::EC2::LaunchTemplate",
    },
    "contentapifloodgateTESTcontentapifloodgateProfile9D3403A2": {
      "Properties": {
        "Roles": [
          {
            "Ref": "InstanceRoleContentapifloodgate4A6AA3CB",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
  },
}
`;
